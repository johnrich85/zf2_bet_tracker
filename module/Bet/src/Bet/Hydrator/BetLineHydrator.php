<?php namespace Bet\Hydrator;

use Doctrine\ORM\EntityManager;
use Matches\Entity\Match;
use Zend\ServiceManager\ServiceManager;
use Zend\ServiceManager\ServiceManagerAwareInterface;
use Zend\Stdlib\Hydrator\ClassMethods;

/**
 * Class BetHydrator
 *
 * @package Bet\Hydrator
 */
class BetLineHydrator extends ClassMethods implements ServiceManagerAwareInterface
{
    /**
     * @var
     */
    protected $sm;

    /**
     * BetLineHydrator constructor.
     * @param bool $underscoreSeparatedKeys
     */
    public function __construct($underscoreSeparatedKeys = true)
    {
        parent::__construct($underscoreSeparatedKeys);
    }

    /**
     * @param array $data
     * @param object $object
     * @return object
     */
    public function hydrate(array $data, $object)
    {
        $data['match'] = $this->populateMatch($data['match']);

        return parent::hydrate($data, $object); // TODO: Change the autogenerated stub
    }

    /**
     * @param ServiceManager $serviceManager
     */
    public function setServiceManager(ServiceManager $serviceManager)
    {
        $this->sm = $serviceManager;
    }

    /**
     * @param $id
     * @return null
     */
    protected function populateMatch($id)
    {
        if($id instanceof Match) {
            return $id;
        }

        $ref = $this->em()
            ->getReference('\Matches\Entity\Match', $id);

        if($ref) {
            return $ref;
        } else {
            return null;
        }
    }

    /**
     * @return mixed
     */
    protected function em()
    {
        return $this->sm
            ->get('doctrine.entitymanager.orm_default');
    }
}