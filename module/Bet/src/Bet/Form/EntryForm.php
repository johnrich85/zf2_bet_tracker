<?php

namespace Bet\Form;

use Bet\Entity\Bet;
use Bet\Form\Fieldset\Line;
use Zend\Form\Form;
use Zend\Form\FormInterface;

class EntryForm extends Form
{
    /**
     * @var
     */
    protected $matches;

    /**
     * Keeps track of how many lines the form has.
     * @var int
     */
    protected $lineCounter = 0;

    /**
     * EntryForm constructor.
     * @param null $name
     */
    public function __construct($name = null)
    {
        parent::__construct('entry');

        $this->setAttribute('method', 'post');

        $this->add(array(
            'name' => 'id',
            'attributes' => array(
                'type' => 'hidden',
                'placeholder' => 'ID'
            )
        ));

        $this->add(array(
            'name' => 'userId',
            'attributes' => array(
                'type' => 'hidden',
                'placeholder' => 'ID',
                'value' => '1',
            ),
            'value' => '1',
        ));

        $this->add(array(
            'name' => 'name',
            'attributes' => array(
                'required' => 'required',
                'type' => 'text',
                'placeholder' => 'Name / Title',
                'class' => 'form-control',
            )
        ));

        $this->add(array(
            'name' => 'date',
            'type' => 'text',
            'attributes' => array(
                'required' => 'required',
                'class' => 'form-control',
            )
        ));

        $this->add(array(
            'name' => 'amount',
            'attributes' => array(
                'type' => 'text',
                'placeholder' => 'Bet amount',
                'class' => 'form-control'
            )
        ));

        $this->add(array(
            'name' => 'return',
            'attributes' => array(
                'type' => 'text',
                'placeholder' => 'Total return',
                'class' => 'form-control'
            )
        ));

        $this->add(array(
            'name' => 'successful',
            'type' => 'checkbox',
            'options' => array(
                'label' => 'Enter as a winning bet?',
                'use_hidden_element' => true,
                'checked_value' => '1',
                'unchecked_value' => '0'
            )

        ));

        $this->add(array(
            'name' => 'submit',
            'attributes' => array(
                'type' => 'submit',
                'value' => 'Add',
                'id' => 'submitbutton',
            ),
        ));

        $this->add(array(
            'type' => 'Zend\Form\Element\Csrf',
            'name' => 'secret',
            'options' => array(
                'csrf_options' => array(
                    'timeout' => 600
                )
            )
        ));

        $this->addBetLineFieldset();

        $this->setAttribute('action', '/bet/add');

        $this->setDefaults();
    }

    /**
     * @param object $object
     * @param int $flags
     * @return Form
     */
    public function bind($object, $flags = FormInterface::VALUES_NORMALIZED)
    {
        if(!$object instanceof Bet) {
            throw new \UnexpectedValueException('Object must be instance of Bet');
        }

        $lines = $object->getLines();

        $this->addBetLines($lines);

        return parent::bind($object, $flags); // TODO: Change the autogenerated stub
    }

    /**
     * Adds bet line fields.
     */
    protected function addBetLineFieldset()
    {
        $wrapper = new \Zend\Form\Fieldset('lines');

        $this->add($wrapper);

        $this->addBetLine();
    }

    /**
     * Resets bet lines to default and then adds
     * new elements for each existing bet line.
     * @param $lines
     */
    protected function addBetLines($lines)
    {
        $this->get('lines')->remove('lines_0');

        $this->lineCounter = 0;

        foreach ($lines as $line) {
            $this->addBetLine($line);
        }
    }

    /**
     * Adds a single bet line to the form.
     *
     * @param null $line
     */
    protected function addBetLine($line = null)
    {
        $name = "lines_" . $this->lineCounter;

        $fieldset = new Line($name, [
            'index' => $this->lineCounter
        ]);

        if ($line) {
            $fieldset->populateValues($line->toArray());
        }

        $this->get('lines')->add($fieldset);

        $this->lineCounter ++;
    }

    /**
     * Switches the form to edit mode.
     */
    public function editMode()
    {
        $ele = $this->get('id');

        $id = $ele->getValue();

        $this->setAttribute('action', '/bet/edit/' . $id);

        $this->get('submit')->setValue('Edit');
    }

    /**
     * Sets default values
     */
    public function setDefaults()
    {
        $date = $this->get('date')->getValue();

        $now = new \DateTime();

        if (empty($date)) {
            $this->get('date')
                ->setValue($now->format('Y-m-d H:i:s'));
        }
    }
} 